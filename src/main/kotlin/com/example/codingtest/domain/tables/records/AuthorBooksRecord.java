/*
 * This file is generated by jOOQ.
 */
package com.example.codingtest.domain.tables.records;


import com.example.codingtest.domain.tables.AuthorBooks;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AuthorBooksRecord extends TableRecordImpl<AuthorBooksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.author_books.author_id</code>.
     */
    public void setAuthorId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.author_books.author_id</code>.
     */
    public Integer getAuthorId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.author_books.book_id</code>.
     */
    public void setBookId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.author_books.book_id</code>.
     */
    public Integer getBookId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorBooksRecord
     */
    public AuthorBooksRecord() {
        super(AuthorBooks.AUTHOR_BOOKS);
    }

    /**
     * Create a detached, initialised AuthorBooksRecord
     */
    public AuthorBooksRecord(Integer authorId, Integer bookId) {
        super(AuthorBooks.AUTHOR_BOOKS);

        setAuthorId(authorId);
        setBookId(bookId);
        resetChangedOnNotNull();
    }
}
